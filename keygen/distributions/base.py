class Distribution:
    def __init__(self, keys):
        """Constructor of the abstract Distribution class.

        Args:
            keys (array): Array that holds the keys to be used in the distribution.
                          Each element in the array represents a distinct key that
                          can be generated by the distribution. The array should
                          contain unique elements.

        Example:
            keys = ['key1', 'key2', 'key3', 'key4', 'key5']
            distribution = Distribution(keys)

        Note:
            This class is intended to be an abstract base class. Subclasses should
            implement the `generate` method to provide specific distribution behavior.
        """
        self.keys = keys

    def generate(self, arrival_rate):
        """Generate a distribution of keys based on the given arrival rate.

        Args:
            arrival_rate (int): The rate at which keys should be generated.
                                This parameter is used by subclasses to determine
                                how many keys to generate and in what distribution.

        Raises:
            NotImplementedError: This method should be overridden by subclasses.
        """
        raise NotImplementedError("This method should be overridden by subclasses")
